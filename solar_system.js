var canvas = document.getElementById('canvas');var ctx = canvas.getContext('2d');var sun = {	x: canvas.width*2,	y: canvas.height*2.8 ,	radius: 50,	color: 'yellow'};var planets = [	{		name: 'Mercury',		color: 'gray',		radius: 10,		distance: 100,		speed: 0.02,		angle: 0	},	{		name: 'Venus',		color: 'orange',		radius: 20,		distance: 150,		speed: 0.015,		angle: 0	},	{		name: 'Earth',		color: 'blue',		radius: 20,		distance: 200,		speed: 0.01,		angle: 0,		moons: [			{				name: 'Moon',				color: 'gray',				radius: 5,				distance: 30,				speed: 0.05,				angle: 0			}		]	},	{		name: 'Mars',		color: 'red',		radius: 15,		distance: 250,		speed: 0.008,		angle: 0,		moons: [			{				name: 'Phobos',				color: 'gray',				radius: 3,				distance: 20,				speed: 0.03,				angle: 0			},			{				name: 'Deimos',				color: 'gray',				radius: 4,				distance: 40,				speed: 0.02,				angle: 0			}		]	},	{		name: 'Jupiter',		color: 'brown',		radius: 35,		distance: 350,		speed: 0.005,		angle: 0,		moons: [			{				name: 'Io',				color: 'gray',				radius: 7,				distance: 50,				speed: 0.03,				angle: 0			},			{				name: 'Europa',				color: 'white',				radius: 6,				distance: 70,				speed: 0.02,				angle: 0			},			{				name: 'Ganymede',				color: 'gray',				radius: 9,				distance: 90,				speed: 0.015,				angle: 0			},			{				name: 'Callisto',				color: 'orange',				radius: 8,				distance: 110,				speed: 0.01,				angle: 0			}		]	},	{		name: 'Saturn',		color: 'pink',		radius: 30,		distance: 450,		speed: 0.003,		angle: 0,		moons: [			{				name: 'Titan',				color: 'gray',				radius: 10,				distance: 80,				speed: 0.02,				angle: 0			},			{				name: 'Enceladus',				color: 'white',				radius: 5,				distance: 100,				speed: 0.015,				angle: 0			},			{				name: 'Mimas',				color: 'gray',				radius: 4,				distance: 120,				speed: 0.01,				angle: 0			}		]	},	{		name: 'Uranus',		color: 'lightblue',		radius: 25,		distance: 550,		speed: 0.002,		angle: 0,		moons: [			{				name: 'Miranda',				color: 'gray',				radius: 3,				distance: 30,				speed: 0.03,				angle: 0			},			{				name: 'Ariel',				color: 'white',				radius: 5,				distance: 50,				speed: 0.02,				angle: 0			},			{				name: 'Umbriel',				color: 'gray',				radius: 4,				distance: 70,				speed: 0.015,				angle: 0			},			{				name: 'Titania',				color: 'orange',				radius: 6,				distance: 90,				speed: 0.01,				angle: 0			}		]	},	{		name: 'Neptune',		color: 'darkblue',		radius: 23,		distance: 650,		speed: 0.001,		angle: 0,		moons: [			{				name: 'Triton',				color: 'gray',				radius: 7,				distance: 100,				speed: 0.02,				angle: 0			},			{				name: 'Nereid',				color: 'white',				radius: 4,				distance: 150,				speed: 0.015,				angle: 0			},			{				name: 'Proteus',				color: 'gray',				radius: 3,				distance: 200,				speed: 0.01,				angle: 0			}		]	}];// 添加彗星var comet = {x: sun.x - 100,y: sun.y,radius: 10,color: 'gray',angle: 0,speed: 0.03,tailLength: 50,tailAngle: 0};function drawSun() {	ctx.beginPath();	ctx.arc(sun.x, sun.y, sun.radius, 0, 2 * Math.PI);	ctx.fillStyle = sun.color;	ctx.fill();}function drawPlanet(planet) {    // 计算行星位置    var x = sun.x + planet.distance * Math.cos(planet.angle);    var y = sun.y + planet.distance * Math.sin(planet.angle);    // 绘制行星轨道    ctx.beginPath();    ctx.arc(sun.x, sun.y, planet.distance, 0, 2 * Math.PI);    ctx.strokeStyle = '#ccc';    ctx.lineWidth = 1;    ctx.stroke();    // 绘制行星本身    ctx.beginPath();    ctx.arc(x, y, planet.radius*0.5, 0, 2 * Math.PI);    ctx.fillStyle = planet.color;    ctx.fill();    // 绘制卫星    if (planet.moons) {        for (var i = 0; i < planet.moons.length; i++) {            drawMoon(planet.moons[i], x, y);        }    }    planet.angle += planet.speed;}function drawMoon(moon, planetX, planetY) {	var x = planetX + moon.distance*0.5 * Math.cos(moon.angle);	var y = planetY + moon.distance*0.5 * Math.sin(moon.angle);	ctx.beginPath();	ctx.arc(x, y, moon.radius*0.5, 0, 2 * Math.PI);	ctx.fillStyle = moon.color;	ctx.fill();	moon.angle += moon.speed;}function drawComet() {    // 计算彗星位置    var x = comet.x + comet.radius * Math.cos(comet.angle);    var y = comet.y + comet.radius * Math.sin(comet.angle);    // 绘制彗星尾巴    for (var i = 0; i < comet.tailLength; i++) {        var tailX = x - i * Math.cos(comet.tailAngle);        var tailY = y - i * Math.sin(comet.tailAngle);        ctx.beginPath();        ctx.arc(tailX, tailY, comet.radius * (1 - i / comet.tailLength), 0, 2 * Math.PI);        ctx.fillStyle = comet.color;        ctx.fill();    }    // 绘制彗星本身    ctx.beginPath();    ctx.arc(x, y, comet.radius, 0, 2 * Math.PI);    ctx.fillStyle = comet.color;    ctx.fill();    comet.angle += comet.speed;    comet.tailAngle = comet.angle + Math.PI;}function draw() {	ctx.clearRect(0, 0, canvas.width, canvas.height);	drawSun();	for (var i = 0; i < planets.length; i++) {		drawPlanet(planets[i]);	}    //drawComet();}setInterval(draw, 10);var maxWidth = 0;var maxHeight = 0;// 计算太阳系的最大宽度和高度for (var i = 0; i < planets.length; i++) {	var distance = planets[i].distance + planets[i].radius;	if (distance > maxWidth) {		maxWidth = distance;	}	if (planets[i].moons) {		for (var j = 0; j < planets[i].moons.length; j++) {			var moonDistance = planets[i].moons[j].distance + planets[i].moons[j].radius;			if (moonDistance > maxWidth) {				maxWidth = moonDistance;			}		}	}	if (planets[i].distance + planets[i].radius > maxHeight) {		maxHeight = planets[i].distance + planets[i].radius;	}}// 设置canvas元素的宽度和高度canvas.width = maxWidth * 2;canvas.height = maxHeight * 2;