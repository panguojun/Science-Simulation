// 定义初始参数var M = 10;var t = 0;var dt = 1e6;var L = 1e4;var T = 1e4;var R = Math.sqrt(L / (4 * Math.PI * 5.67e-8 * T ** 4));var X = 0.7;var Y = 0.28;var Z = 0.02;// 获取画布和上下文var canvas = document.getElementById("canvas");var ctx = canvas.getContext("2d");// 定义演化过程function evolve() {    // 计算质量损失    var Mloss = 0;    if (t < 1e7) {        Mloss = 0;    } else if (t < 1e8) {        Mloss = 0.1 * dt;    } else {        Mloss = 1 * dt;    }    // 计算新的质量    M = M - Mloss;    // 计算新的核反应    X = X - 0.01 * dt;    Y = Y + 0.01 * dt;    Z = Z + 0.01 * dt;    // 计算新的光度和温度    L = 4 * Math.PI * R ** 2 * 5.67e-8 * T ** 4;    T = T * (L / (4 * Math.PI * R ** 2 * 5.67e-8)) ** 0.25;    // 计算新的半径    R = Math.sqrt(L / (4 * Math.PI * 5.67e-8 * T ** 4));    // 更新时间    t = t + dt;    // 绘制演化过程    ctx.clearRect(0, 0, canvas.width, canvas.height); // 清空画布    ctx.beginPath();    ctx.strokeStyle = "red";    ctx.moveTo(0, canvas.height - L / 10);    ctx.lineTo(canvas.width, canvas.height - L / 10);    ctx.stroke();    ctx.beginPath();    ctx.strokeStyle = "blue";    ctx.moveTo(0, canvas.height - T / 100);    ctx.lineTo(canvas.width, canvas.height - T / 100);    ctx.stroke();    ctx.beginPath();    ctx.strokeStyle = "green";    ctx.moveTo(0, canvas.height - R / 100);    ctx.lineTo(canvas.width, canvas.height - R / 100);    ctx.stroke();    // 循环调用演化过程    requestAnimationFrame(evolve);}// 开始演化过程evolve();function draw() {	ctx.clearRect(0, 0, canvas.width, canvas.height);	evolve();}setInterval(draw, 10);